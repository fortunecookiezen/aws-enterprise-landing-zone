---
AWSTemplateFormatVersion: '2010-09-09'
Description: "Resolver endpoint and rule for locating internal .service private zones. This 
should be deployed to the same subnet as your proxies, and assumes those are privaet subnets"
Parameters:
  vpcid: 
    Type: AWS::EC2::VPC::Id
    Description: "vpc"
  TargetIp1:
    Type: String
    Description: "ip address of the inbound resolver you will query"
    MinLength: 9
    MaxLength: 15
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
    ConstraintDescription: Must be a valid IP address in the form x.x.x.x
  TargetIp2:
    Type: String
    Description: "ip address of the inbound resolver you will query"
    MinLength: 9
    MaxLength: 15
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
    ConstraintDescription: Must be a valid IP address in the form x.x.x.x
  ASI:
    Type: String
    MinLength: 3
    MaxLength: 4
    Description: "asi of the other account zone - must be lower-case, limit 4 characters"
    AllowedPattern: "[a-z]*"
  Environment:
    Type: String
    MinLength: 3
    MaxLength: 4
    Description: "environment (dev|itg|cat|prod)"
    AllowedValues:
      - "dev"
      - "itg"
      - "cat"
      - "prod"
  Owner:
    Type: String
    Description: "email address of the the Owner of this stack"
    Default: "admin@root.com"
    AllowedPattern: "^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$"


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Environment Configuration"
        Parameters:
        - ASI
        - Environment
        - Owner
      - Label:
          default: "Network Configuration"
        Parameters:
        - vpcid
        - TargetIp1
        - TargetIp2
    ParameterLabels:
      vpcid:
        default: "VPC for the security group"
      TargetIp1:
        default: "ip of the inbound resolver you will query"
      TargetIp2:
        default: "ip of the inbound resolver you will query"

Resources:
  ServiceResolver:
    Type: "AWS::Route53Resolver::ResolverEndpoint"
    Properties:
      Direction: "OUTBOUND"
      IpAddresses: 
        - SubnetId: !ImportValue privatesubneta
        - SubnetId: !ImportValue privatesubnetb
      Name: !Join [" ", [!Ref Environment, !Ref ASI, "outbound resolver"]]
      SecurityGroupIds: 
        - !Ref DnsSecurityGroup
      Tags: 
        - 
          Key: "Name"
          Value: !Join ["-", [!Ref Environment, !Ref ASI, "inbound-resolver"]]
        - 
          Key: "Project"
          Value: !Ref ASI
        - 
          Key: "Environment"
          Value: !Ref Environment
        -
          Key: "Owner"
          Value: !Ref Owner

  ServiceResolverRule:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: !Join [".", [!Ref Environment, !Ref ASI, "aws.service"]]
      Name: !Join ["-", [!Ref Environment, !Ref ASI, "resolver-rule"]]
      ResolverEndpointId: !Ref ServiceResolver
      RuleType: FORWARD
      Tags: 
        - 
          Key: "Name"
          Value: !Join ["-", [!Ref Environment, !Ref ASI, "resolver-rule"]]
        - 
          Key: "Project"
          Value: !Ref ASI
        - 
          Key: "Environment"
          Value: !Ref Environment
        -
          Key: "Owner"
          Value: !Ref Owner
      TargetIps:
        -
          Ip: !Ref TargetIp1
          Port: "53"
        -
          Ip: !Ref TargetIp2
          Port: "53"

  ServiceResolverRuleAssociation:
    Type: "AWS::Route53Resolver::ResolverRuleAssociation"
    Properties:
      Name: !Join ["-", [!Ref Environment, !Ref ASI, "resolver-rule-association"]]
      ResolverRuleId: !Ref ServiceResolverRule
      VPCId: !Ref vpcid

  DnsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Join ["-", [!Ref Environment, "dns-sg"]]
      GroupDescription: !Join ["-", [!Ref Environment, !Ref ASI, "DnsSecurityGroup"]]
      VpcId: !Ref vpcid
      SecurityGroupIngress:
          -
            CidrIp: 10.0.0.0/8
            IpProtocol: "-1"
            ToPort: 53
            FromPort: 53
      SecurityGroupEgress:
          -
            CidrIp: 10.0.0.0/8
            ToPort: 53
            IpProtocol: "-1"
      Tags:
        -
          Key: "Name"
          Value: !Join ["-", [!Ref Environment, !Ref ASI, "DnsSecurityGroup"]]
        -
          Key: "Project"
          Value: !Ref ASI
        -
          Key: "Environment"
          Value: !Ref Environment
        -
          Key: "Owner"
          Value: !Ref Owner
Outputs:
  TargetIps:
    Description: "target ips in other account"
    Value: !GetAtt ServiceResolverRule.TargetIps
    Export:
      Name: TargetIps
  DomainName:
    Description: "domain name of services zone"
    Value: !GetAtt ServiceResolverRule.DomainName
    Export:
      Name: DomainName      